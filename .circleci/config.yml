version: 2.1

executors:
  node_executor:
    docker:
      - image: cimg/node:lts
    resource_class: medium

jobs:
  build:
    executor: node_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pnpm-deps-{{ checksum "pnpm-lock.yaml" }}
            - v1-pnpm-deps-
      - run:
          name: Enable Corepack and Prepare pnpm
          command: |
            corepack enable
            corepack prepare pnpm@latest --activate
            pnpm config set store-dir .pnpm-store
            echo "Using pnpm version: $(pnpm --version)"
            sudo apt update
            sudo apt install rsync
      - run:
          name: Install Dependencies
          command: pnpm install --frozen-lockfile
      - save_cache:
          key: v1-pnpm-deps-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - .pnpm-store
      - run:
          name: Build Project for SSR
          command: pnpm run build # Should run 'nuxt build'
      - persist_to_workspace:
          root: .
          paths:
            - .output # Correct path for Nuxt 3 server build output
            # Optional: Persist package.json/pnpm-lock.yaml if needed for server install
            # - package.json
            # - pnpm-lock.yaml

  deploy:
    executor: node_executor # Using node executor as it has ssh/rsync readily available
    environment:
      PM2_APP_NAME:    # Match the name used in `pm2 start`
    steps:
      - attach_workspace:
          at: /home/circleci/project
      # Optional: Verify workspace contents
      - run:
          name: List attached workspace files
          command: ls -al /home/circleci/project/.output
      # Deploy using rsync (more efficient than scp -r)
      - run:
          name: Deploy Code to Server via Rsync
          command: |
            echo "Deploying to $SERVER_IP..."
            # Syncs .output/ content, deletes extraneous files in destination subdir, excludes node_modules
            # Requires rsync on the runner (included in cimg/node)
            rsync -avz --delete \
              -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
              /home/circleci/project/.output/ \
              $SERVER_USER@$SERVER_IP:$SERVER_DIR/.output/
      # Install Production Dependencies on Server & Reload PM2 App
      - run:
          name: Install Server Dependencies and Reload App
          command: |
            echo "Installing dependencies and reloading PM2 app $PM2_APP_NAME on $SERVER_IP..."
            ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SERVER_USER@$SERVER_IP " \
              cd $SERVER_DIR && \
              pnpm install --prod && \
              pm2 reload $PM2_APP_NAME || pm2 restart $PM2_APP_NAME \
            "
            echo "Deployment steps complete."

workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master